@using BlogProject.Areas.Admin.Models
@using BlogProject.Utilities
@using System.Security.Claims
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "_AdminLayout";
}

@model ItemPagination<UserViewModel>

@if (TempData["Succeed"] != null)
{
    <div id="successAlert" class="custom-alert alert-success">
        <i class="fa-solid fa-check"></i>
        @TempData["Succeed"]!.ToString()
    </div>
}
else if (TempData["Failed"] != null)
{
    <div id="errorAlert" class="custom-alert alert-danger">
        <i class="fa-solid fa-xmark"></i>  @TempData["Failed"]!.ToString()
    </div>
}

@section Scripts {
    <script>
        showAlertSuccess('successAlert');
        showAlertError('errorAlert');

                const suspendModal = document.getElementById('suspendModal');

        suspendModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const userId = button.getAttribute('data-user-id');
            const username = button.getAttribute('data-username');

            suspendModal.querySelector('#modalUserId').value = userId;
            suspendModal.querySelector('#suspendUsername').textContent = username;

            // Reset select boxes
            document.getElementById('ReasonCategory').selectedIndex = 0;
            document.getElementById('ReasonDetail').innerHTML = '<option value="" disabled selected>Select a detailed reason</option>';
        });

        // Reason data
        const reasonMap = {
            Spam: [
                "Repeated unsolicited messages",
                "Promotional content",
                "Mass friend requests"
            ],
            Harassment: [
                "Offensive language",
                "Threatening messages",
                "Discriminatory behavior"
            ],
            Fake: [
                "Impersonating someone",
                "Fake profile photo or info",
                "Bot-like activity"
            ],
            Violation: [
                "Sharing illegal content",
                "Circumventing moderation",
                "Multiple account abuse"
            ],
            Remove: [
                "Remove Current Suspension"
            ]
        };

        // Dynamic population of detailed reasons
        const categorySelect = document.getElementById("ReasonCategory");
        const detailSelect = document.getElementById("ReasonDetail");

        categorySelect.addEventListener("change", function () {
            const selectedCategory = this.value;
            const options = reasonMap[selectedCategory] || [];

            detailSelect.innerHTML = '<option value="" disabled selected>Select a detailed reason</option>';

            options.forEach(reason => {
                const option = document.createElement("option");
                option.value = reason;
                option.textContent = reason;
                detailSelect.appendChild(option);
            });
        });
    </script>
}
<div class="mb-4">
    <div class="d-flex align-items-center mb-2">
        <div class="bg-primary bg-opacity-10 p-3 rounded-3 me-3">
            <i class="fas fa-user-tie fs-2 text-primary"></i>
        </div>
        <div>
            <h1 class="mb-0 fw-bold text-gradient text-start">User Management</h1>
            <p class="text-muted mb-0">Streamline permissions and access with our comprehensive user management system.</p>
        </div>
    </div>
    <div class="border-bottom pb-3 mb-3"></div>
</div>
<div class="d-flex justify-content-end mb-3">
    <form asp-action="UserList" method="get" class="d-flex align-items-center gap-2">
        <div class="form-check form-switch d-flex align-content-center gap-2"
             data-bs-toggle="tooltip" data-bs-placement="top" title="Include deleted roles?">
            <input class="form-check-input" type="checkbox"
                   name="includeDeleted"
                   value="true"
                   id="includeDeletedSwitch"
            @(Model.IncludeDeleted ? "checked" : "")
                   onchange="this.form.submit(); toggleEyeIconAndText(this);" />
            <label class="form-check-label fw-semibold small text-secondary d-flex align-items-center"
                   for="includeDeletedSwitch">
                <i id="eyeIcon" class="bi text-gradient @(Model.IncludeDeleted ? "bi-eye" :"bi-eye-slash-fill") me-2 transition"></i>
                <span id="eyeLabelText" class="text-gradient">
                    @(Model.IncludeDeleted ? "Remove deleted ones." : "Include deleted ones.")
                </span>
            </label>
        </div>
    </form>
</div>




<div class="table-responsive">
    <table class="table table-hover align-middle mb-0">
        <thead class="bg-dark bg-opacity-5">
            <tr>
                <th class="ps-4 text-uppercase fw-normal small">User</th>
                <th class="text-uppercase fw-normal small d-none d-lg-table-cell">Contact</th>
                <th class="text-uppercase fw-normal small d-none d-md-table-cell">Activity</th>
                <th class="text-uppercase fw-normal small">Security</th>
                <th class="text-uppercase fw-normal small">Status</th>
                <th class="text-center text-uppercase fw-normal small">Actions</th>
            </tr>
        </thead>
        <tbody>
            @{
                int i = (Model.CurrentPage - 1) * Model.PageSize;
            }
            @foreach (var user in Model.Items)
            {
                i++;
                <tr style="@(user.IsDeleted ? "opacity:40%" : "" )">
                    <!-- User Column -->
                    <!-- User Column -->
                    <td>
                        <div class="d-flex align-items-center">
                            <!-- Avatar -->
                            <div class="flex-shrink-0">
                                @await Component.InvokeAsync("UserProfilePicture", new {userId = @user.Id, width = "36",height = "36"})
                            </div>

                            <!-- User Info -->
                            <div class="flex-grow-1 ms-3 d-flex flex-column">
                                <div class="d-flex align-items-baseline gap-2">
                                    <!-- Name & Status -->
                                    <div class="d-flex align-items-center gap-2">
                                        <span class="fw-semibold text-truncate" style="max-width: 120px;">
                                            @user.Name @user.Surname
                                        </span>
                                        @if (user.IsDeleted)
                                        {
                                            <i class="bi bi-trash text-danger fs-7" data-bs-toggle="tooltip" title="Archived"></i>
                                        }
                                    </div>

                                    <!-- Username -->
                                    <small class="text-muted text-truncate d-none d-md-inline" style="max-width: 150px;">
                                        @@@user.Username
                                    </small>
                                </div>

                                <!-- User ID -->
                                <div class="d-flex align-items-center gap-2 mt-1">
                                    <span class="badge text-gradient bg-opacity-10 text-dark font-monospace ps-0 fs-8"
                                          data-bs-toggle="tooltip"
                                          title="User ID: @user.Id">
                                        ID: @user.Id
                                    </span>
                                </div>
                            </div>
                        </div>
                    </td>

                    <!-- Contact Column (Hidden on mobile) -->
                    <td class="d-none d-lg-table-cell">
                        <div class="small">
                            @if (!string.IsNullOrEmpty(user.PhoneNumber))
                            {
                                <div>
                                    <i class="bi bi-phone me-2"></i>@user.PhoneNumber
                                    @if (user.PhoneNumberConfirmed)
                                    {
                                        <i class="bi bi-check-circle text-success ms-2" data-bs-toggle="tooltip" title="Verified"></i>
                                    }
                                </div>
                            }
                            else
                            {
                                <span class="text-muted">No phone</span>
                            }
                        </div>
                    </td>

                    <!-- Activity Column (Hidden on mobile) -->
                    <td class="d-none d-md-table-cell">
                        <div class="small">
                            <div data-bs-toggle="tooltip" title="Registered Date">
                                <i class="bi bi-calendar-plus me-2"></i>@user.RegisteredDate
                            </div>
                            <div class="text-muted mt-1" data-bs-toggle="tooltip" title="Last Login">
                                <i class="bi bi-clock-history me-2"></i>@user.LastLoginDate
                            </div>
                        </div>
                    </td>

                    <!-- Security Column -->
                    <td>
                        <div class="d-flex gap-2">
                            <i class="bi bi-envelope @(user.EmailConfirmed ? "text-success" : "text-danger")"
                               data-bs-toggle="tooltip"
                               title="@(user.EmailConfirmed ? "Email verified" : "Email not verified")"></i>
                            <i class="bi bi-shield @(user.TwoFactorEnabled ? "text-success" : "text-danger")"
                               data-bs-toggle="tooltip"
                               title="@(user.TwoFactorEnabled ? "2FA enabled" : "2FA disabled")"></i>
                        </div>
                    </td>

                    <!-- Status Column -->
                    <td>
                        @if (user.IsSuspended)
                        {
                            <span class="badge bg-warning bg-opacity-25 text-warning"
                                  data-bs-toggle="tooltip"
                                  title="Suspended until @user.SuspendedTo">
                                <i class="bi bi-slash-circle me-1"></i>Suspended
                            </span>
                        }
                        else
                        {
                            <span class="badge bg-success bg-opacity-25 text-success">
                                <i class="bi bi-check-circle me-1"></i>Active
                            </span>
                        }
                    </td>

                    <!-- Actions Column -->
                    <td class="text-center">
                        <div class="dropdown">
                            <button class="btn btn-sm btn-light rounded-pill px-3"
                                    type="button"
                                    data-bs-toggle="dropdown">
                                <i class="bi bi-gear"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li>
                                    <button class="dropdown-item"
                                            data-bs-toggle="modal"
                                            data-bs-target="#suspendModal"
                                            data-user-id="@user.Id"
                                            data-username="@user.Username">
                                        <i class="bi bi-pause-circle me-2"></i>Suspend
                                    </button>
                                </li>
                                <li>
                                    <a class="dropdown-item"
                                       asp-area=""
                                       asp-controller="User"
                                       asp-action="Profile"
                                       asp-route-userName="@user.Username">
                                        <i class="bi bi-eye me-2"></i>View Profile
                                    </a>
                                </li>
                                <li><hr class="dropdown-divider"></li>
                                <li>
                                    <button class="dropdown-item text-danger"
                                            data-role-id="@user.Id"
                                            data-bs-toggle="modal"
                                            data-bs-target="#confirmDeleteModal">
                                        <i class="bi bi-archive me-2"></i>Archive
                                    </button>
                                </li>
                            </ul>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Onayla</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
            </div>
            <div class="modal-body">
                Bu kullanıcıyı silmek istediğinize emin misiniz?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Vazgeç</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Evet, Sil</button>
            </div>
        </div>
    </div>
</div>

<!-- Suspend User Modal -->
<div class="modal fade" id="suspendModal" tabindex="-1" aria-labelledby="suspendModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content border-0 rounded-4 shadow-lg">

            <!-- Modal Header with Gradient -->
            <div class="modal-header text-white rounded-top-4 px-4 py-3" style="background: linear-gradient(135deg, #f12711, #f5af19);">
                <h5 class="modal-title d-flex align-items-center gap-2" id="suspendModalLabel">
                    <i class="bi bi-exclamation-triangle-fill fs-4"></i>
                    Suspend User: <span id="suspendUsername" class="fw-semibold"></span>
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <form asp-action="SuspendUser" method="post">
                <div class="modal-body px-4 py-4">

                    <input type="hidden" name="UserId" id="modalUserId" />

                    <!-- Reason Category -->
                    <div class="mb-3">
                        <label for="ReasonCategory" class="form-label fw-semibold">Reason Category</label>
                        <select class="form-select rounded-3 py-2" id="ReasonCategory" name="ReasonCategory" required>
                            <option value="" disabled selected>Select a reason category</option>
                            <option value="Spam">Spam or Advertising</option>
                            <option value="Harassment">Hate Speech or Harassment</option>
                            <option value="Fake">Fake Account</option>
                            <option value="Violation">Violation of Terms</option>
                            <option value="Remove">Remove Suspension</option>
                        </select>
                    </div>

                    <!-- Reason Detail -->
                    <div class="mb-3">
                        <label for="ReasonDetail" class="form-label fw-semibold">Detailed Reason</label>
                        <select class="form-select rounded-3 py-2" id="ReasonDetail" name="ReasonDetail" required>
                            <option value="" disabled selected>Select a detailed reason</option>
                        </select>
                    </div>

                    <!-- Suspension Duration -->
                    <div class="mb-3">
                        <label for="SuspensionMinutes" class="form-label fw-semibold">Suspension Duration</label>
                        <select class="form-select rounded-3 py-2" name="SuspensionMinutes" required>
                            <option value="0">Remove Suspension</option>
                            <option value="15">15 Minutes</option>
                            <option value="60">1 Hour</option>
                            <option value="1440">1 Day</option>
                            <option value="4320">3 Days</option>
                            <option value="10080">1 Week</option>
                            <option value="43200">1 Month</option>
                            <option value="129600">3 Months</option>
                            <option value="259200">6 Months</option>
                            <option value="525600">1 Year</option>
                        </select>
                        <div class="form-text text-muted mt-1">
                            The user won't be able to log in during the suspension period.
                        </div>
                    </div>
                </div>

                <!-- Modal Footer -->
                <div class="modal-footer px-4 py-3 border-top-0">
                    <button type="button" class="btn btn-outline-secondary rounded-pill px-4" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger rounded-pill px-4">Suspend</button>
                </div>
            </form>
        </div>
    </div>
</div>



@await Html.PartialAsync("_Pagination", Model)

<script>
    let selectedRoleId = null;

    // Sil butonuna basıldığında role ID'yi al
    document.querySelectorAll('.delete-button').forEach(button => {
        button.addEventListener('click', function () {
            selectedRoleId = this.getAttribute('data-role-id');
        });
    });

    // Evet'e basıldığında silme isteği gönder
    document.getElementById('confirmDeleteBtn').addEventListener('click', function () {
        // Modal'ı hemen kapat
        const modalEl = document.getElementById('confirmDeleteModal');
        const modalInstance = bootstrap.Modal.getInstance(modalEl);
        modalInstance?.hide();

        // Silme isteğini gönder
        fetch(`/Roles/RoleDelete/${selectedRoleId}`, {
            method: 'POST'
        })
        .then(response => response.json())
        .then(data => {
            if (data.status) {
                // Başarılıysa yönlendir
                window.location.href = data.redirectUrl; // Yönlendirme URL'si alınır ve sayfa yönlendirilir
            } else {
                // Hata durumunda, tekrar yönlendirme yapılır (gereksizse bu kısmı kaldırabilirsiniz)
                window.location.href = data.redirectUrl;
            }
        })
        .catch(err => {
            console.error("Silme sırasında hata oluştu:", err);
        });
    });

    function toggleEyeIcon(checkbox) {
        const icon = document.getElementById("eyeIcon");
        if (checkbox.checked) {
            icon.classList.remove("bi-eye");
            icon.classList.add("bi-eye-slash-fill");
        } else {
            icon.classList.remove("bi-eye-slash-fill");
            icon.classList.add("bi-eye");
        }
    }

    // Sayfa yüklendiğinde tooltipleri aktive et
    document.addEventListener("DOMContentLoaded", function () {
        const tooltips = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltips.map(el => new bootstrap.Tooltip(el));
    });
</script>




@using BlogProject.Domain.Entities
@using BlogProject.Web.ViewModels
@using Microsoft.AspNetCore.Identity

@inject UserManager<AppUser> userManager

@{
    var categoryId = ViewBag.CategoryId;
    ViewData["Title"] = Model.Category.Name + " - kayas.dev";
    AppUser? currentUser = null;
    if (User.Identity.IsAuthenticated)
        currentUser = await userManager.FindByNameAsync(User.Identity.Name!);
}

@model CategoryViewModel
<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@Model.Category.Name - Minimal Blog</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --black: #000000;
            --white: #ffffff;
            --light-gray: #f5f5f5;
            --medium-gray: #e0e0e0;
            --dark-gray: #333333;
            --accent: #555555;
            --primary: #2563eb;
            --danger: #dc2626;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            /* font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; */
            /* line-height: 1.6; */
            color: var(--dark-gray);
            background-color: var(--white);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 2rem;
        }

        /* Header */
        .header {
            background-color: var(--white);
            border-bottom: 1px solid var(--medium-gray);
            padding: 1rem 0;
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .navbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.5rem 0;
        }

        .brand-logo {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--black);
            text-decoration: none;
        }

            .brand-logo .dot {
                color: var(--primary);
            }

        .back-button {
            display: inline-flex;
            align-items: center;
            padding: 0.5rem 1rem;
            background: transparent;
            border: 1px solid var(--medium-gray);
            border-radius: 4px;
            color: var(--dark-gray);
            text-decoration: none;
            font-size: 0.9rem;
            font-weight: 500;
            transition: all 0.3s;
        }

            .back-button:hover {
                background-color: var(--light-gray);
            }

            .back-button i {
                margin-right: 0.5rem;
            }

        /* Category Hero */
        .category-hero {
            background: linear-gradient(145deg, #fafafa 0%, #ffffff 100%);
            color: #222;
            padding: 4rem 2rem;
            text-align: center;
            position: relative;
            overflow: hidden;
            isolation: isolate;
        }

            /* Dinamik Arkaplan Animasyonu */
            .category-hero::before {
                content: '';
                position: absolute;
                inset: 0;
                background: radial-gradient(circle at 75% 30%, rgba(255, 0, 0, 0.03) 0%, transparent 30%), radial-gradient(circle at 25% 70%, rgba(255, 0, 0, 0.03) 0%, transparent 30%);
                animation: pulse 15s infinite alternate;
                z-index: -1;
            }

            /* Subtle Grid Pattern */
            .category-hero::after {
                content: '';
                position: absolute;
                inset: 0;
                background-image: linear-gradient(rgba(0, 0, 0, 0.02) 1px, transparent 1px), linear-gradient(90deg, rgba(0, 0, 0, 0.02) 1px, transparent 1px);
                background-size: 40px 40px;
                z-index: -1;
                opacity: 0.7;
            }

        /* Animasyonlar */
        @@keyframes pulse {
            0% {
                opacity: 0.3;
                transform: scale(1);
            }

            50% {
                opacity: 0.6;
                transform: scale(1.02);
            }

            100% {
                opacity: 0.3;
                transform: scale(1);
            }
        }

        @@keyframes float {
            0%, 100% {
                transform: translateY(0);
            }

            50% {
                transform: translateY(-10px);
            }
        }

        /* Tipografi */
        .category-hero h1 {
            font-size: 3.5rem;
            font-weight: 700;
            margin-bottom: 1.5rem;
            line-height: 1.2;
            position: relative;
            display: inline-block;
            animation: float 6s ease-in-out infinite;
        }

            .category-hero h1 span {
                color: #ff0000;
                position: relative;
            }

                .category-hero h1 span::after {
                    content: '';
                    position: absolute;
                    bottom: -5px;
                    left: 0;
                    width: 100%;
                    height: 2px;
                    background: currentColor;
                    transform: scaleX(0);
                    transform-origin: right;
                    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);
                }

        .category-hero:hover h1 span::after {
            transform: scaleX(1);
            transform-origin: left;
        }

        .category-hero p {
            max-width: 650px;
            margin: 0 auto 2rem;
            color: #555;
            font-size: 1.2rem;
            line-height: 1.7;
            position: relative;
        }

        /* Floating Elements */
        .floating-dot {
            position: absolute;
            width: 10px;
            height: 10px;
            background: #ff0000;
            border-radius: 50%;
            filter: blur(1px);
            opacity: 0.5;
            animation: float 8s ease-in-out infinite;
        }

        /* Responsive */
        @@media (max-width: 768px) {
            .category-hero {
                padding: 5rem 1.5rem;
            }

                .category-hero h1 {
                    font-size: 2.5rem;
                    animation: none;
                }
        }

        .category-hero-content {
            position: relative;
            z-index: 1;
        }

        .category-icon {
            width: 80px;
            height: 80px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1.5rem;
            font-size: 2rem;
            backdrop-filter: blur(10px);
        }

        .category-title {
            font-size: 2.5rem;
            font-weight: 800;
            margin-bottom: 1rem;
            letter-spacing: -0.5px;
        }

        .category-description {
            font-size: 1.1rem;
            opacity: 0.9;
            max-width: 600px;
            margin: 0 auto 2rem;
        }

        .category-stats {
            display: flex;
            justify-content: center;
            gap: 2rem;
            margin-top: 2rem;
        }

        .stat-item {
            text-align: center;
        }

        .stat-number {
            font-size: 1.5rem;
            font-weight: 700;
            display: block;
        }

        .stat-label {
            font-size: 0.9rem;
            opacity: 0.8;
        }

        /* Filter Bar */
        .filter-bar {
            background: var(--white);
            border-bottom: 1px solid var(--medium-gray);
            padding: 1.5rem 0;
            position: sticky;
            top: 73px;
            z-index: 90;
        }

        .filter-controls {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .filter-left {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .sort-dropdown {
            padding: 0.5rem 1rem;
            border: 1px solid var(--medium-gray);
            border-radius: 4px;
            background: var(--white);
            font-size: 0.9rem;
            cursor: pointer;
        }

        .view-toggle {
            display: flex;
            border: 1px solid var(--medium-gray);
            border-radius: 4px;
            overflow: hidden;
        }

            .view-toggle button {
                padding: 0.5rem 0.8rem;
                border: none;
                background: var(--white);
                color: var(--dark-gray);
                cursor: pointer;
                transition: all 0.3s;
            }

                .view-toggle button.active {
                    background: var(--black);
                    color: var(--white);
                }

        .posts-count {
            font-size: 0.9rem;
            color: var(--accent);
        }

        /* Posts Grid */
        .posts-section {
            padding: 3rem 0;
        }

        .posts-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 2rem;
            margin-bottom: 3rem;
        }

            .posts-grid.list-view {
                grid-template-columns: 1fr;
                gap: 1.5rem;
            }

        /* Post Cards */
        .post-card {
            background: var(--white);
            border: 1px solid var(--medium-gray);
            border-radius: 8px;
            overflow: hidden;
            transition: transform 0.3s, box-shadow 0.3s;
            display: flex;
            flex-direction: column;
        }

            .post-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.05);
            }

        .posts-grid.list-view .post-card {
            flex-direction: row;
            align-items: center;
        }

        .post-img-container {
            height: 200px;
            overflow: hidden;
            position: relative;
        }

        .posts-grid.list-view .post-img-container {
            width: 200px;
            height: 150px;
            flex-shrink: 0;
        }

        .post-img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s;
        }

        .post-card:hover .post-img {
            transform: scale(1.03);
        }

        .post-body {
            padding: 1.75rem;
            flex-grow: 1;
        }

        .post-meta {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 0.75rem;
        }

        .post-category {
            display: inline-block;
            color: var(--white);
            background: var(--black);
            font-size: 0.75rem;
            font-weight: 600;
            padding: 0.25rem 0.75rem;
            border-radius: 12px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .post-date {
            font-size: 0.8rem;
            color: var(--accent);
        }

        .post-title {
            font-size: 1.4rem;
            font-weight: 700;
            color: var(--black);
            margin-bottom: 0.75rem;
            line-height: 1.3;
        }

        .posts-grid.list-view .post-title {
            font-size: 1.2rem;
        }

        .post-excerpt {
            color: var(--dark-gray);
            margin-bottom: 1.5rem;
            opacity: 0.8;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .post-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: auto;
        }

        .read-more {
            color: var(--black);
            text-decoration: none;
            font-weight: 600;
            font-size: 0.9rem;
            display: inline-flex;
            align-items: center;
        }

            .read-more::after {
                content: "→";
                margin-left: 0.5rem;
                transition: transform 0.3s;
            }

            .read-more:hover::after {
                transform: translateX(3px);
            }

        .post-stats {
            display: flex;
            gap: 1rem;
            font-size: 0.8rem;
            color: var(--accent);
        }

            .post-stats span {
                display: flex;
                align-items: center;
                gap: 0.25rem;
            }

        /* Pagination */
        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 0.5rem;
            margin-top: 3rem;
        }

            .pagination a,
            .pagination span {
                padding: 0.5rem 1rem;
                border: 1px solid var(--medium-gray);
                border-radius: 4px;
                text-decoration: none;
                color: var(--dark-gray);
                transition: all 0.3s;
            }

                .pagination a:hover {
                    background: var(--light-gray);
                }

            .pagination .current {
                background: var(--black);
                color: var(--white);
                border-color: var(--black);
            }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
        }

            .empty-state i {
                font-size: 4rem;
                color: var(--medium-gray);
                margin-bottom: 1rem;
            }

            .empty-state h3 {
                font-size: 1.5rem;
                margin-bottom: 1rem;
                color: var(--black);
            }

            .empty-state p {
                color: var(--accent);
                margin-bottom: 2rem;
            }

        /* Related Categories */
        .related-categories {
            background: var(--light-gray);
            padding: 3rem 0;
        }

            .related-categories h3 {
                font-size: 1.5rem;
                font-weight: 700;
                margin-bottom: 1.5rem;
                text-align: center;
            }

        .categories-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
        }

        .category-card {
            background: var(--white);
            padding: 2rem;
            border-radius: 8px;
            text-align: center;
            text-decoration: none;
            color: var(--dark-gray);
            transition: transform 0.3s;
        }

            .category-card:hover {
                transform: translateY(-5px);
            }

            .category-card i {
                font-size: 2rem;
                margin-bottom: 1rem;
                color: var(--primary);
            }

            .category-card h4 {
                font-size: 1.2rem;
                margin-bottom: 0.5rem;
                color: var(--black);
            }

            .category-card span {
                font-size: 0.9rem;
                color: var(--accent);
            }

        /* Responsive */
        @@media (max-width: 768px) {
            .container {
                padding: 0 1rem;
            }

            .category-title {
                font-size: 2rem;
            }

            .category-stats {
                flex-direction: column;
                gap: 1rem;
            }

            .filter-controls {
                flex-direction: column;
                align-items: stretch;
            }

            .filter-left {
                justify-content: space-between;
            }

            .posts-grid {
                grid-template-columns: 1fr;
            }

                .posts-grid.list-view .post-card {
                    flex-direction: column;
                }

                .posts-grid.list-view .post-img-container {
                    width: 100%;
                    height: 200px;
                }

            .pagination {
                flex-wrap: wrap;
            }
        }</style>
</head>
<body>



    <!-- Category Hero -->
    <section class="category-hero">
        <div class="floating-dot" style="top:20%; left:15%; animation-delay:0s;"></div>
        <div class="floating-dot" style="top:70%; right:10%; animation-delay:2s;"></div>
        <div class="floating-dot" style="top:10%; left:75%; animation-delay:1s;"></div>
        <div class="floating-dot" style="top:80%; right:80%; animation-delay:0s;"></div>
        <div class="container">
            <div class="category-hero-content">
                <div class="category-icon">
                    <i class="@(GetCategoryIcon(Model.Category.Name)) fs-1"></i>
                </div>
                <h1 class="category-title">@Model.Category.Name</h1>
                <p class="category-description">@Model.Category.Description</p>
                <div class="category-stats">
                    <div class="stat-item">
                        <span class="stat-number">@Model.Posts.Count</span>
                        <span class="stat-label">Posts</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number">@Model.TotalViews</span>
                        <span class="stat-label">Views</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number">@Model.AuthorCount</span>
                        <span class="stat-label">Author</span>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Posts Section -->
    <section class="posts-section">
        <div class="container">
            @if (Model.Posts.Any())
            {
                <div class="posts-grid" id="postsGrid">
                    @foreach (var post in Model.Posts)
                    {
                        <article class="post-card post-title-link">
                            <a class="text-decoration-none" asp-controller="post" asp-action="postdetails" asp-route-id="@post.Id">
                                <div class="post-img-container">
                                    <img src="@post.CoverImageUrl" alt="@post.Title" class="post-img">
                                </div>
                                <div class="post-body">
                                    <div class="post-meta">
                                        <span class="post-category">@post.Category.Name</span>
                                        <span class="post-date">
                                            <i class="fas fa-calendar-alt"></i>
                                            @post.CreatedTime.ToString("dd MMM yyyy")
                                        </span>
                                    </div>
                                    <h3 class="post-title">@post.Title</h3>
                                    <p class="post-excerpt">@post.Subtitle</p>
                                    <div class="post-footer">
                                        <a asp-controller="Post" asp-action="PostDetails" asp-route-Id="@post.Id" class="read-more">
                                            Devamını Oku
                                        </a>
                                        <div class="post-stats">
                                            <span>
                                                <i class="fas fa-eye"></i>
                                                @post.ViewCount
                                            </span>
                                            <span>
                                                <i class="fas fa-clock"></i>

                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </article>
                    }
                </div>

                <!-- Pagination -->
                <div class="pagination">
                    <a href="#">&laquo;</a>
                    <span class="current">1</span>
                    <a href="#">2</a>
                    <a href="#">3</a>
                    <a href="#">&raquo;</a>
                </div>
            }
            else
            {
                <div class="empty-state">
                    <i class="fas fa-folder-open"></i>
                    <h3>There are no posts yet</h3>
                    <p>There are no articles published in this category yet.</p>
                    <a href="/" class="read-more">Return to Home Page</a>
                </div>
            }
        </div>
    </section>
    <canvas id="postChart" width="800" height="200"></canvas>
    <!-- Posts Section -->
    <section class="posts-section">
        <div class="container">
            @if (Model.Posts.Any())
            {
                <div class="posts-grid list-view" id="postsGrid">
                    @foreach (var post in Model.Posts)
                    {
                        <article class="post-card post-title-link">
                            <a class="text-decoration-none" asp-controller="post" asp-action="postdetails" asp-route-id="@post.Id">
                                <div class="post-img-container">
                                    <img src="@post.CoverImageUrl" alt="@post.Title" class="post-img">
                                </div>
                                <div class="post-body">
                                    <div class="post-meta">
                                        <span class="post-category">@post.Category.Name</span>
                                        <span class="post-date">
                                            <i class="fas fa-calendar-alt"></i>
                                            @post.CreatedTime.ToString("dd MMM yyyy")
                                        </span>
                                    </div>
                                    <h3 class="post-title">@post.Title</h3>
                                    <p class="post-excerpt">@post.Subtitle</p>
                                    <div class="post-footer">
                                        <a asp-controller="Post" asp-action="PostDetails" asp-route-Id="@post.Id" class="read-more">
                                            Devamını Oku
                                        </a>
                                        <div class="post-stats">
                                            <span>
                                                <i class="fas fa-eye"></i>
                                                @post.ViewCount
                                            </span>
                                            <span>
                                                <i class="fas fa-clock"></i>

                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </article>
                    }
                </div>

                <!-- Pagination -->
                <div class="pagination">
                    <a href="#">&laquo;</a>
                    <span class="current">1</span>
                    <a href="#">2</a>
                    <a href="#">3</a>
                    <a href="#">&raquo;</a>
                </div>
            }
            else
            {
                <div class="empty-state">
                    <i class="fas fa-folder-open"></i>
                    <h3>There are no posts yet</h3>
                    <p>There are no articles published in this category yet.</p>
                    <a href="/" class="read-more">Return to Home Page</a>
                </div>
            }
        </div>
    </section>

    <!-- Related Categories -->
    <section class="related-categories">
        <div class="container">
            <h3>Diğer Kategoriler</h3>
            <div class="categories-grid">
                @foreach (var category in Model.RelatedCategories)
                {
                    <a href="/category/@category.Id" class="category-card">
                        <i class="fas fa-@(GetCategoryIcon(category.Name))"></i>
                        <h4>@category.Name</h4>
                        <span></span>
                    </a>
                }
            </div>
        </div>
    </section>

    <script>
        // View toggle functionality
        document.querySelectorAll('.view-toggle button').forEach(button => {
            button.addEventListener('click', function() {
                document.querySelectorAll('.view-toggle button').forEach(btn => btn.classList.remove('active'));
                this.classList.add('active');

                const view = this.getAttribute('data-view');
                const postsGrid = document.getElementById('postsGrid');

                if (view === 'list') {
                    postsGrid.classList.add('list-view');
                } else {
                    postsGrid.classList.remove('list-view');
                }
            });
        });

        // Sort functionality
        document.getElementById('sortSelect').addEventListener('change', function() {
            const sortValue = this.value;
            // Burada AJAX ile sıralama yapabilirsiniz
            console.log('Sort by:', sortValue);
        });
    </script>

    @functions {
        public string GetCategoryIcon(string categoryName)
        {
            return categoryName.ToLower() switch
            {
                "technology" => "fa-solid fa-microchip",
                "design" => "fa-solid fa-pen-ruler",
                "yazılım" => "code",
                "culture" => "fa-solid fa-users-rectangle",
                "style" => "fa-solid fa-border-top-left",
                "business" => "fa-solid fa-user-tie",
                "politics" => "fa-solid fa-landmark",
                "opinion" => "fa-solid fa-lightbulb",
                "science" => "fa-solid fa-flask-vial",
                "health" => "fa-solid fa-notes-medical",
                "travel" => "fa-solid fa-mountain-sun",
                "tr" => "fa-solid fa-flag",
                "world" => "fa-solid fa-earth-europe",
                _ => "folder"
            };
        }
    }

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        window.categoryId = '@ViewBag.CategoryId';

        document.addEventListener("DOMContentLoaded", function () {
            const categoryId = window.categoryId || "1";

            if (!categoryId) {
                console.error("Kategori ID'si bulunamadı!");
                return;
            }

            const jsonOutput = document.getElementById("jsonOutput");
            const canvas = document.getElementById("postChart");

            if (!canvas) {
                console.error("Canvas elementi bulunamadı!");
                return;
            }

            fetch(`/Category/GetPostCountsByDate?categoryId=${categoryId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    if (jsonOutput) {
                        jsonOutput.innerText = JSON.stringify(data, null, 2);
                    }

                    const updatedData = {
                        ...data,
                        datasets: data.datasets.map(ds => ({
                            ...ds,
                            backgroundColor: 'rgba(255, 99, 132, 0.2)', // Daha hafif dolgu
                            borderColor: 'rgba(255, 99, 132, 0.7)',     // İnce ama belirgin çizgi
                            borderWidth: 1.2,                           // İnceltilmiş çizgi kalınlığı
                            pointBackgroundColor: 'rgba(255, 99, 132, 0.8)',
                            pointBorderColor: 'rgba(255, 99, 132, 1)',
                            pointRadius: 3,                             // Daha küçük noktalar
                            pointHoverRadius: 5,
                            tension: 0.45                              // Daha yumuşak ve zarif eğri
                        }))
                    };

                    const ctx = canvas.getContext('2d');
                    new Chart(ctx, {
                        type: 'line',
                        data: updatedData,
                        options: {
                            responsive: true,
                            plugins: {
                                legend: {
                                    position: 'top',
                                    labels: {
                                        color: '#555'
                                    }
                                },
                                title: {
                                    display: true,
                                    text: 'Daily distribution of posts in the category shared in the last 30 days',
                                    color: '#333',
                                    font: { size: 16, weight: '600' }
                                }
                            },
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        precision: 0,
                                        color: '#666'
                                    },
                                    grid: {
                                        color: 'rgba(0,0,0,0.05)'
                                    }
                                },
                                x: {
                                    ticks: {
                                        color: '#666'
                                    },
                                    grid: {
                                        display: false
                                    }
                                }
                            }
                        }
                    });
                })
                .catch(error => {
                    console.error("Veri çekme hatası:", error);
                    if (jsonOutput) {
                        jsonOutput.innerText = `Veri çekme hatası: ${error.message}`;
                    }
                });
        });
    </script>


</body>
</html>

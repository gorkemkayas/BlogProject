@using BlogProject.Domain.Entities
@using BlogProject.Web.ViewModels
@using Microsoft.AspNetCore.Identity

@inject UserManager<AppUser> userManager

@{
    ViewData["Title"] = Model.Category.Name + " - kayas.dev";
    AppUser? currentUser = null;
    if (User.Identity.IsAuthenticated)
        currentUser = await userManager.FindByNameAsync(User.Identity.Name!);
}

@model CategoryViewModel
<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@Model.Category.Name - Minimal Blog</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --black: #000000;
            --white: #ffffff;
            --light-gray: #f5f5f5;
            --medium-gray: #e0e0e0;
            --dark-gray: #333333;
            --accent: #555555;
            --primary: #2563eb;
            --danger: #dc2626;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: var(--dark-gray);
            background-color: var(--white);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 2rem;
        }

        /* Header */
        .header {
            background-color: var(--white);
            border-bottom: 1px solid var(--medium-gray);
            padding: 1rem 0;
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .navbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.5rem 0;
        }

        .brand-logo {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--black);
            text-decoration: none;
        }

            .brand-logo .dot {
                color: var(--primary);
            }

        .back-button {
            display: inline-flex;
            align-items: center;
            padding: 0.5rem 1rem;
            background: transparent;
            border: 1px solid var(--medium-gray);
            border-radius: 4px;
            color: var(--dark-gray);
            text-decoration: none;
            font-size: 0.9rem;
            font-weight: 500;
            transition: all 0.3s;
        }

            .back-button:hover {
                background-color: var(--light-gray);
            }

            .back-button i {
                margin-right: 0.5rem;
            }

        /* Category Hero */
        .category-hero {
            background: linear-gradient(135deg, var(--black) 0%, var(--dark-gray) 100%);
            color: var(--white);
            padding: 4rem 0;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

            .category-hero::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="rgba(255,255,255,0.02)"/><circle cx="75" cy="75" r="1" fill="rgba(255,255,255,0.02)"/><circle cx="50" cy="10" r="1" fill="rgba(255,255,255,0.02)"/><circle cx="20" cy="80" r="1" fill="rgba(255,255,255,0.02)"/><circle cx="80" cy="30" r="1" fill="rgba(255,255,255,0.02)"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
                opacity: 0.3;
            }

        .category-hero-content {
            position: relative;
            z-index: 1;
        }

        .category-icon {
            width: 80px;
            height: 80px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1.5rem;
            font-size: 2rem;
            backdrop-filter: blur(10px);
        }

        .category-title {
            font-size: 2.5rem;
            font-weight: 800;
            margin-bottom: 1rem;
            letter-spacing: -0.5px;
        }

        .category-description {
            font-size: 1.1rem;
            opacity: 0.9;
            max-width: 600px;
            margin: 0 auto 2rem;
        }

        .category-stats {
            display: flex;
            justify-content: center;
            gap: 2rem;
            margin-top: 2rem;
        }

        .stat-item {
            text-align: center;
        }

        .stat-number {
            font-size: 1.5rem;
            font-weight: 700;
            display: block;
        }

        .stat-label {
            font-size: 0.9rem;
            opacity: 0.8;
        }

        /* Filter Bar */
        .filter-bar {
            background: var(--white);
            border-bottom: 1px solid var(--medium-gray);
            padding: 1.5rem 0;
            position: sticky;
            top: 73px;
            z-index: 90;
        }

        .filter-controls {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .filter-left {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .sort-dropdown {
            padding: 0.5rem 1rem;
            border: 1px solid var(--medium-gray);
            border-radius: 4px;
            background: var(--white);
            font-size: 0.9rem;
            cursor: pointer;
        }

        .view-toggle {
            display: flex;
            border: 1px solid var(--medium-gray);
            border-radius: 4px;
            overflow: hidden;
        }

            .view-toggle button {
                padding: 0.5rem 0.8rem;
                border: none;
                background: var(--white);
                color: var(--dark-gray);
                cursor: pointer;
                transition: all 0.3s;
            }

                .view-toggle button.active {
                    background: var(--black);
                    color: var(--white);
                }

        .posts-count {
            font-size: 0.9rem;
            color: var(--accent);
        }

        /* Posts Grid */
        .posts-section {
            padding: 3rem 0;
        }

        .posts-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 2rem;
            margin-bottom: 3rem;
        }

            .posts-grid.list-view {
                grid-template-columns: 1fr;
                gap: 1.5rem;
            }

        /* Post Cards */
        .post-card {
            background: var(--white);
            border: 1px solid var(--medium-gray);
            border-radius: 8px;
            overflow: hidden;
            transition: transform 0.3s, box-shadow 0.3s;
            display: flex;
            flex-direction: column;
        }

            .post-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.05);
            }

        .posts-grid.list-view .post-card {
            flex-direction: row;
            align-items: center;
        }

        .post-img-container {
            height: 200px;
            overflow: hidden;
            position: relative;
        }

        .posts-grid.list-view .post-img-container {
            width: 200px;
            height: 150px;
            flex-shrink: 0;
        }

        .post-img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s;
        }

        .post-card:hover .post-img {
            transform: scale(1.03);
        }

        .post-body {
            padding: 1.75rem;
            flex-grow: 1;
        }

        .post-meta {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 0.75rem;
        }

        .post-category {
            display: inline-block;
            color: var(--white);
            background: var(--black);
            font-size: 0.75rem;
            font-weight: 600;
            padding: 0.25rem 0.75rem;
            border-radius: 12px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .post-date {
            font-size: 0.8rem;
            color: var(--accent);
        }

        .post-title {
            font-size: 1.4rem;
            font-weight: 700;
            color: var(--black);
            margin-bottom: 0.75rem;
            line-height: 1.3;
        }

        .posts-grid.list-view .post-title {
            font-size: 1.2rem;
        }

        .post-excerpt {
            color: var(--dark-gray);
            margin-bottom: 1.5rem;
            opacity: 0.8;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .post-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: auto;
        }

        .read-more {
            color: var(--black);
            text-decoration: none;
            font-weight: 600;
            font-size: 0.9rem;
            display: inline-flex;
            align-items: center;
        }

            .read-more::after {
                content: "→";
                margin-left: 0.5rem;
                transition: transform 0.3s;
            }

            .read-more:hover::after {
                transform: translateX(3px);
            }

        .post-stats {
            display: flex;
            gap: 1rem;
            font-size: 0.8rem;
            color: var(--accent);
        }

            .post-stats span {
                display: flex;
                align-items: center;
                gap: 0.25rem;
            }

        /* Pagination */
        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 0.5rem;
            margin-top: 3rem;
        }

            .pagination a,
            .pagination span {
                padding: 0.5rem 1rem;
                border: 1px solid var(--medium-gray);
                border-radius: 4px;
                text-decoration: none;
                color: var(--dark-gray);
                transition: all 0.3s;
            }

                .pagination a:hover {
                    background: var(--light-gray);
                }

            .pagination .current {
                background: var(--black);
                color: var(--white);
                border-color: var(--black);
            }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
        }

            .empty-state i {
                font-size: 4rem;
                color: var(--medium-gray);
                margin-bottom: 1rem;
            }

            .empty-state h3 {
                font-size: 1.5rem;
                margin-bottom: 1rem;
                color: var(--black);
            }

            .empty-state p {
                color: var(--accent);
                margin-bottom: 2rem;
            }

        /* Related Categories */
        .related-categories {
            background: var(--light-gray);
            padding: 3rem 0;
        }

            .related-categories h3 {
                font-size: 1.5rem;
                font-weight: 700;
                margin-bottom: 1.5rem;
                text-align: center;
            }

        .categories-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
        }

        .category-card {
            background: var(--white);
            padding: 2rem;
            border-radius: 8px;
            text-align: center;
            text-decoration: none;
            color: var(--dark-gray);
            transition: transform 0.3s;
        }

            .category-card:hover {
                transform: translateY(-5px);
            }

            .category-card i {
                font-size: 2rem;
                margin-bottom: 1rem;
                color: var(--primary);
            }

            .category-card h4 {
                font-size: 1.2rem;
                margin-bottom: 0.5rem;
                color: var(--black);
            }

            .category-card span {
                font-size: 0.9rem;
                color: var(--accent);
            }

        /* Responsive */
        @@media (max-width: 768px) {
            .container

        {
            padding: 0 1rem;
        }

        .category-title {
            font-size: 2rem;
        }

        .category-stats {
            flex-direction: column;
            gap: 1rem;
        }

        .filter-controls {
            flex-direction: column;
            align-items: stretch;
        }

        .filter-left {
            justify-content: space-between;
        }

        .posts-grid {
            grid-template-columns: 1fr;
        }

            .posts-grid.list-view .post-card {
                flex-direction: column;
            }

            .posts-grid.list-view .post-img-container {
                width: 100%;
                height: 200px;
            }

        .pagination {
            flex-wrap: wrap;
        }

        }</style>
</head>
<body>
    <!-- Header -->
    <header class="header">
        <div class="container">
            <nav class="navbar">
                <a href="/" class="brand-logo">kayas<span class="dot">.</span>dev</a>
                <a href="/" class="back-button">
                    <i class="fas fa-arrow-left"></i>
                    Ana Sayfa
                </a>
            </nav>
        </div>
    </header>

    <!-- Category Hero -->
    <section class="category-hero">
        <div class="container">
            <div class="category-hero-content">
                <div class="category-icon">
                    <i class="fas fa-@(GetCategoryIcon(Model.Category.Name))"></i>
                </div>
                <h1 class="category-title">@Model.Category.Name</h1>
                <p class="category-description">@Model.Category.Description</p>
                <div class="category-stats">
                    <div class="stat-item">
                        <span class="stat-number">@Model.Posts.Count</span>
                        <span class="stat-label">Yazı</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number">@Model.TotalViews</span>
                        <span class="stat-label">Görüntülenme</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number">@Model.AuthorCount</span>
                        <span class="stat-label">Yazar</span>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Filter Bar -->
    <section class="filter-bar">
        <div class="container">
            <div class="filter-controls">
                <div class="filter-left">
                    <select class="sort-dropdown" id="sortSelect">
                        <option value="newest">En Yeni</option>
                        <option value="oldest">En Eski</option>
                        <option value="popular">En Popüler</option>
                        <option value="mostRead">En Çok Okunan</option>
                    </select>
                    <div class="view-toggle">
                        <button class="active" data-view="grid">
                            <i class="fas fa-th"></i>
                        </button>
                        <button data-view="list">
                            <i class="fas fa-list"></i>
                        </button>
                    </div>
                </div>
                <div class="posts-count">
                    <strong>@Model.Posts.Count</strong> yazı bulundu
                </div>
            </div>
        </div>
    </section>

    <!-- Posts Section -->
    <section class="posts-section">
        <div class="container">
            @if (Model.Posts.Any())
            {
                <div class="posts-grid" id="postsGrid">
                    @foreach (var post in Model.Posts)
                    {
                        <article class="post-card">
                            <div class="post-img-container">
                                <img src="@post.CoverImageUrl" alt="@post.Title" class="post-img">
                            </div>
                            <div class="post-body">
                                <div class="post-meta">
                                    <span class="post-category">@post.CategoryName</span>
                                    <span class="post-date">
                                        <i class="fas fa-calendar-alt"></i>
                                        @post.CreatedTime.ToString("dd MMM yyyy")
                                    </span>
                                </div>
                                <h3 class="post-title">@post.Title</h3>
                                <p class="post-excerpt">@post.Subtitle</p>
                                <div class="post-footer">
                                    <a asp-controller="Post" asp-action="PostDetails" asp-route-Id="@post.Id" class="read-more">
                                        Devamını Oku
                                    </a>
                                    <div class="post-stats">
                                        <span>
                                            <i class="fas fa-eye"></i>
                                            @post.ViewCount
                                        </span>
                                        <span>
                                            <i class="fas fa-clock"></i>
                                            
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </article>
                    }
                </div>

                <!-- Pagination -->
                <div class="pagination">
                    <a href="#">&laquo;</a>
                    <span class="current">1</span>
                    <a href="#">2</a>
                    <a href="#">3</a>
                    <a href="#">&raquo;</a>
                </div>
            }
            else
            {
                <div class="empty-state">
                    <i class="fas fa-folder-open"></i>
                    <h3>Henüz yazı bulunmuyor</h3>
                    <p>Bu kategoride henüz hiç yazı yayınlanmamış.</p>
                    <a href="/" class="read-more">Ana Sayfaya Dön</a>
                </div>
            }
        </div>
    </section>

    <!-- Related Categories -->
    <section class="related-categories">
        <div class="container">
            <h3>Diğer Kategoriler</h3>
            <div class="categories-grid">
                @foreach (var category in Model.RelatedCategories)
                {
                    <a href="/category/@category.Id" class="category-card">
                        <i class="fas fa-@(GetCategoryIcon(category.Name))"></i>
                        <h4>@category.Name</h4>
                        <span></span>
                    </a>
                }
            </div>
        </div>
    </section>

    <script>
        // View toggle functionality
        document.querySelectorAll('.view-toggle button').forEach(button => {
            button.addEventListener('click', function() {
                document.querySelectorAll('.view-toggle button').forEach(btn => btn.classList.remove('active'));
                this.classList.add('active');

                const view = this.getAttribute('data-view');
                const postsGrid = document.getElementById('postsGrid');

                if (view === 'list') {
                    postsGrid.classList.add('list-view');
                } else {
                    postsGrid.classList.remove('list-view');
                }
            });
        });

        // Sort functionality
        document.getElementById('sortSelect').addEventListener('change', function() {
            const sortValue = this.value;
            // Burada AJAX ile sıralama yapabilirsiniz
            console.log('Sort by:', sortValue);
        });
    </script>

    @functions {
        public string GetCategoryIcon(string categoryName)
        {
            return categoryName.ToLower() switch
            {
                "teknoloji" => "laptop-code",
                "tasarım" => "palette",
                "yazılım" => "code",
                "mobile" => "mobile-alt",
                "web" => "globe",
                "ai" => "brain",
                "blockchain" => "link",
                "oyun" => "gamepad",
                "güvenlik" => "shield-alt",
                "veri" => "database",
                _ => "folder"
            };
        }
    }
</body>
</html>
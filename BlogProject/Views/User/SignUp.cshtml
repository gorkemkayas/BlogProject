@using BlogProject.Web.ViewModels
@{
    Layout = "_SignInUp";
    ViewData["Title"] = "Sign Up";
}

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}

@model SignUpViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kayas - Sign Up</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Yellowtail&display=swap" rel="stylesheet">

    <style>
        .date-input-container {
            position: relative;
            margin-bottom: 2rem;
        }

            .date-input-container input[type="date"] {
                width: 100%;
                padding: 1.2rem 0 0.5rem 0;
                border: none;
                border-bottom: 2px solid var(--border);
                background: transparent;
                font-size: 1rem;
                color: var(--text-primary);
                outline: none;
            }

            .date-input-container label {
                position: absolute;
                left: 0;
                top: 1.2rem;
                color: var(--text-light);
                transition: all 0.3s ease;
                pointer-events: none;
            }

            /* Label animation */
            .date-input-container input:focus + label,
            .date-input-container input:not(:placeholder-shown) + label {
                top: 0;
                font-size: 0.8rem;
                color: var(--primary);
            }

            /* Date input specific fixes */
            .date-input-container input[type="date"]::-webkit-datetime-edit {
                padding: 0;
                line-height: 1;
            }

            .date-input-container input[type="date"]::-webkit-inner-spin-button,
            .date-input-container input[type="date"]::-webkit-calendar-picker-indicator {
                height: 100%;
                padding: 0;
                margin: 0;
            }

        /* Firefox fix */
        @@supports (-moz-appearance: none) {
            .date-input-container input[type="date"]

        {
            padding-top: 1.5rem;
        }

        }
    </style>
</head>
<body>
    <div class="main-container">
        <!-- Video Hero Section -->
        <section class="hero-section">
            <div class="video-wrapper">
                <video autoplay muted loop playsinline>
                    <source src="/15439750-hd_1080_1920_30fps.mp4">
                    <div class="video-fallback"></div>
                </video>
                <div class="hero-overlay"></div>
            </div>

            <div class="hero-content">
                <div class="brand-identity">
                    <h1 class="brand-logo">
                        <span class="logo-text">kayas</span><span class="logo-dot">.</span>
                    </h1>
                    <p class="brand-subtitle">Share, discover, be inspired.</p>
                </div>

                <div class="value-proposition">
                    <div class="feature-grid">
                        <div class="feature-item">
                            <i class="fas fa-pencil-alt"></i>
                            <span>Freedom to Write</span>
                        </div>
                        <div class="feature-item">
                            <i class="fas fa-users"></i>
                            <span>Community Support</span>
                        </div>
                        <div class="feature-item">
                            <i class="fas fa-lightbulb"></i>
                            <span>Inspiring Content</span>
                        </div>
                        <div class="feature-item">
                            <i class="fas fa-rocket"></i>
                            <span>Fast Updates</span>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <style>
            .yazi-efekti {
                font-size: 32px;
                white-space: nowrap;
                overflow: hidden;
                border-right: 3px solid black;
                width: 0;
                animation: yaz 4s steps(16) infinite;
                animation-fill-mode: forwards;
            }

            @@keyframes yaz {
                0% {
                    width: 0;
                }

                80% {
                    width: 12ch; /* yazı tamamlanıyor */
                }

                100% {
                    width: 12ch; /* burada bekleme süresi */
                }
            }
        </style>
        <!-- Auth Section -->
        <section class="auth-section">
            <div class="auth-container">
                <div class="auth-header">
                    <h2 class="yazi-efekti">Create Account</h2>
                    <p>Already have an account? <a asp-controller="User" asp-action="SignIn" class="text-link">Sign in</a></p>
                </div>

                @if (TempData["Succeed"] != null)
                {
                    <div class="alert alert-success">
                        <i class="fas fa-check-circle"></i> @TempData["Succeed"]!.ToString()
                    </div>
                }
                else if (TempData["Failed"] != null)
                {
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-circle"></i> @TempData["Failed"]!.ToString()
                    </div>
                }

                <form asp-controller="User" asp-action="SignUp" method="post">
                    <div class="input-row mb-0">
                        <div class="input-group">
                            <input asp-for="Name" required>
                            <label asp-for="Name">First Name</label>
                            <div class="input-line"></div>
                            <span class="text-danger" asp-validation-for="Name"></span>
                        </div>

                        <div class="input-group">
                            <input asp-for="Surname" required>
                            <label asp-for="Surname">Last Name</label>
                            <div class="input-line"></div>
                            <span class="text-danger" asp-validation-for="Surname"></span>
                        </div>
                    </div>

                    <div class="input-group">
                        <input asp-for="Email" required>
                        <label asp-for="Email">Email</label>
                        <div class="input-line"></div>
                        <span class="text-danger" asp-validation-for="Email"></span>
                    </div>

                    <div class="input-row">
                        <div class="input-group">
                            <input type="password" asp-for="Password" required>
                            <label asp-for="Password">Password</label>
                            <button type="button" class="password-toggle" tabindex="-1">
                                <i class="fas fa-eye"></i>
                            </button>
                            <div class="input-line"></div>
                            <span class="text-danger" asp-validation-for="Password"></span>
                        </div>

                        <div class="input-group">
                            <input type="password" asp-for="ConfirmPassword" required>
                            <label asp-for="ConfirmPassword">Confirm Password</label>
                            <button type="button" class="password-toggle" tabindex="-1">
                                <i class="fas fa-eye"></i>
                            </button>
                            <div class="input-line"></div>
                            <span class="text-danger" asp-validation-for="ConfirmPassword"></span>
                        </div>
                    </div>

                    <div class="date-input-container">
                        <input asp-for="BirthDate" type="date" id="birthDateInput" required>
                        <label asp-for="BirthDate" for="birthDateInput">Birth Date</label>
                        <div class="input-line"></div>
                        <span class="text-danger" asp-validation-for="BirthDate"></span>
                    </div>

                    <div class="form-options">
                        <label class="checkbox-container">
                            <input type="checkbox" id="iAgree" name="iAgree" required>
                            <span class="checkmark"></span>
                            <span>I agree to the terms and conditions</span>
                        </label>
                    </div>

                    <button type="submit" class="signin-btn">
                        <span>Sign Up</span>
                        <i class="fas fa-arrow-right"></i>
                    </button>
                </form>

                <div class="divider">
                    <span>or</span>
                </div>

                <div class="social-signin">
                    <button class="social-btn google-btn" disabled>
                        <i class="fab fa-google"></i>
                        <span>Continue with Google</span>
                    </button>
                    <button class="social-btn apple-btn" disabled>
                        <i class="fab fa-apple"></i>
                        <span>Continue with Apple</span>
                    </button>
                </div>

                <div class="beta-notice">
                    <i class="fas fa-flask"></i>
                    <span>Social login options coming soon</span>
                </div>
            </div>
        </section>
    </div>

    <style>
        :root {
            --primary: #000000;
            --primary-light: #1a1a1a;
            --secondary: #ffffff;
            --accent: #e63946;
            --text-primary: #000000;
            --text-secondary: #6b7280;
            --text-light: #9ca3af;
            --border: #e5e7eb;
            --surface: #f9fafb;
            --surface-hover: #f3f4f6;
            --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.02);
            --shadow-md: 0 8px 24px rgba(0, 0, 0, 0.08);
            --shadow-lg: 0 16px 48px rgba(0, 0, 0, 0.12);
            --radius: 12px;
            --transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
            --font-primary: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            --font-brand: 'Yellowtail', cursive;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: var(--font-primary);
            background: var(--secondary);
            color: var(--text-primary);
            line-height: 1.5;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        .main-container {
            display: grid;
            grid-template-columns: 1fr 440px;
            border: 1px solid var(--border);
        }

        body {
            margin: 0;
            height: 100vh;
            display: grid;
            place-items: center;
        }

        /* Hero Section */
        .hero-section {
            position: relative;
            overflow: hidden;
            display: flex;
            align-items: center;
            background: linear-gradient(135deg, #000000 0%, #1a1a1a 100%);
        }

        .video-wrapper {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 1;
        }

            .video-wrapper video {
                width: 100%;
                height: 100%;
                object-fit: cover;
                opacity: 0.6;
            }

        .video-fallback {
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(0, 0, 0, 0.8) 0%, rgba(30, 30, 30, 0.6) 50%, rgba(0, 0, 0, 0.9) 100%), url('https://images.unsplash.com/photo-1497366754035-f200968a6e72?ixlib=rb-1.2.1&auto=format&fit=crop&w=1920&q=80');
            background-size: cover;
            background-position: center;
        }

        .hero-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(0, 0, 0, 0.7) 0%, rgba(0, 0, 0, 0.4) 50%, rgba(0, 0, 0, 0.8) 100%);
            z-index: 2;
        }

        .hero-content {
            position: relative;
            z-index: 3;
            padding: 4rem;
            color: var(--secondary);
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .brand-identity {
            margin-bottom: 4rem;
        }

        .brand-logo {
            font-family: var(--font-brand);
            font-size: 4rem;
            font-weight: 400;
            margin-bottom: 1rem;
            display: flex;
            align-items: baseline;
        }

        .logo-text {
            color: var(--secondary);
        }

        .logo-dot {
            color: var(--accent);
            margin-left: 0.1em;
        }

        .brand-subtitle {
            font-size: 1.25rem;
            font-weight: 300;
            opacity: 0.9;
            max-width: 24rem;
        }

        .value-proposition {
            margin-top: auto;
        }

        .feature-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 2rem;
        }

        .feature-item {
            display: flex;
            align-items: center;
            gap: 1rem;
            font-size: 0.95rem;
            font-weight: 400;
            opacity: 0.9;
        }

            .feature-item i {
                font-size: 1.25rem;
                color: var(--accent);
                width: 24px;
                text-align: center;
            }

        /* Auth Section */
        .auth-section {
            background: var(--secondary);
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 2rem;
        }

        .auth-container {
            width: 100%;
            max-width: 360px;
        }

        .auth-header {
            text-align: center;
            margin-bottom: 2rem;
        }

            .auth-header h2 {
                font-size: 2rem;
                font-weight: 700;
                margin-bottom: 0.5rem;
                color: var(--text-primary);
            }

            .auth-header p {
                color: var(--text-secondary);
                font-size: 1rem;
                font-weight: 400;
            }

        .text-link {
            color: var(--primary);
            text-decoration: none;
            font-weight: 600;
            transition: var(--transition);
        }

            .text-link:hover {
                color: var(--accent);
            }

        .alert {
            padding: 1rem;
            border-radius: var(--radius);
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            font-size: 0.9rem;
        }

        .alert-success {
            background-color: rgba(72, 199, 142, 0.1);
            color: #48C78E;
            border: 1px solid rgba(72, 199, 142, 0.2);
        }

        .alert-danger {
            background-color: rgba(241, 70, 104, 0.1);
            color: #F14668;
            border: 1px solid rgba(241, 70, 104, 0.2);
        }

        .input-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1.5rem;
            margin-bottom: 1.0rem;
        }

        .input-group {
            position: relative;
            margin-bottom: 1.0rem;
        }

            .input-group input {
                width: 100%;
                padding: 1rem 0 0.75rem 0;
                background: transparent;
                border: none;
                border-bottom: 2px solid var(--border);
                font-size: 1rem;
                font-weight: 400;
                color: var(--text-primary);
                transition: var(--transition);
                outline: none;
            }

                .input-group input:focus {
                    border-bottom-color: var(--primary);
                }

                    .input-group input:focus + label,
                    .input-group input:valid + label {
                        transform: translateY(-1.5rem) scale(0.85);
                        color: var(--primary);
                    }

            .input-group label {
                position: absolute;
                top: 1rem;
                left: 0;
                font-size: 1rem;
                font-weight: 400;
                color: var(--text-light);
                pointer-events: none;
                transition: var(--transition);
                transform-origin: left top;
            }

        .input-line {
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 2px;
            background: var(--primary);
            transition: var(--transition);
        }

        .input-group input:focus ~ .input-line {
            width: 100%;
        }

        .password-toggle {
            position: absolute;
            right: 0;
            top: 1rem;
            background: none;
            border: none;
            color: var(--text-light);
            cursor: pointer;
            padding: 0.25rem;
            transition: var(--transition);
        }

            .password-toggle:hover {
                color: var(--text-primary);
            }

        .text-danger {
            color: var(--accent);
            font-size: 0.8rem;
            margin-top: 0.25rem;
            display: block;
        }

        .form-options {
            margin-bottom: 2rem;
        }

        .checkbox-container {
            display: flex;
            align-items: center;
            cursor: pointer;
            font-size: 0.9rem;
            color: var(--text-secondary);
            user-select: none;
        }

            .checkbox-container input {
                display: none;
            }

        .checkmark {
            width: 18px;
            height: 18px;
            border: 2px solid var(--border);
            border-radius: 4px;
            margin-right: 0.75rem;
            position: relative;
            transition: var(--transition);
        }

        .checkbox-container input:checked ~ .checkmark {
            background: var(--primary);
            border-color: var(--primary);
        }

            .checkbox-container input:checked ~ .checkmark::after {
                content: '✓';
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                color: var(--secondary);
                font-size: 11px;
                font-weight: 600;
            }

        .signin-btn {
            width: 100%;
            background: var(--primary);
            color: var(--secondary);
            border: none;
            padding: 1rem 2rem;
            border-radius: var(--radius);
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: var(--transition);
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.75rem;
            margin-bottom: 1rem;
        }

            .signin-btn:hover {
                background: var(--primary-light);
                transform: translateY(-1px);
                box-shadow: var(--shadow-md);
            }

            .signin-btn:active {
                transform: translateY(0);
            }

        .divider {
            position: relative;
            text-align: center;
            margin: 1rem 0;
            color: var(--text-light);
            font-size: 0.85rem;
            font-weight: 500;
        }

            .divider::before {
                content: '';
                position: absolute;
                top: 50%;
                left: 0;
                right: 0;
                height: 1px;
                background: var(--border);
                z-index: 1;
            }

            .divider span {
                background: var(--secondary);
                padding: 0 1rem;
                position: relative;
                z-index: 2;
            }

        .social-signin {
            display: grid;
            grid-template-columns: 1fr;
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .social-btn {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.75rem;
            padding: 0.875rem;
            border: 1.5px solid var(--border);
            border-radius: var(--radius);
            background: var(--secondary);
            color: var(--text-secondary);
            font-size: 0.9rem;
            font-weight: 500;
            cursor: not-allowed;
            opacity: 0.6;
            transition: var(--transition);
        }

            .social-btn i {
                font-size: 1.1rem;
            }

        .beta-notice {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            padding: 0.75rem;
            background: var(--surface);
            border-radius: var(--radius);
            color: var(--text-light);
            font-size: 0.8rem;
            text-align: center;
        }

            .beta-notice i {
                color: var(--accent);
                font-size: 0.9rem;
            }

        /* Responsive */
        @@media (max-width: 1024px) {
            .main-container {
                grid-template-columns: 1fr;
            }

            .hero-section {
                min-height: 40vh;
            }

            .hero-content {
                padding: 3rem 2rem;
            }

            .brand-logo {
                font-size: 3rem;
            }

            .feature-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 1.5rem;
            }

            .auth-section {
                padding: 3rem 2rem;
            }

            .input-row {
                grid-template-columns: 1fr;
                gap: 1.5rem;
            }
        }

        @@media (max-width: 640px) {
            .hero-content {
                padding: 2rem 1.5rem;
            }

            .brand-logo {
                font-size: 2.5rem;
            }

            .brand-subtitle {
                font-size: 1.1rem;
            }

            .feature-grid {
                grid-template-columns: 1fr;
                gap: 1.25rem;
            }

            .auth-section {
                padding: 2rem 1.5rem;
            }
        }

        /* Loading Animation */
        .signin-btn.loading {
            pointer-events: none;
        }

            .signin-btn.loading i {
                animation: spin 1s linear infinite;
            }

        @@keyframes spin {
            from {
                transform: rotate(0deg);
            }

            to {
                transform: rotate(360deg);
            }
        }

        /* Focus States */
        .signin-btn:focus,
        .social-btn:focus,
        .text-link:focus {
            outline: 2px solid var(--primary);
            outline-offset: 2px;
        }

        /* Enhanced Accessibility */
        @@media (prefers-reduced-motion: reduce) {
            * {
                animation-duration: 0.01ms !important;
                animation-iteration-count: 1 !important;
                transition-duration: 0.01ms !important;
            }
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Password toggle functionality
            const passwordToggles = document.querySelectorAll('.password-toggle');

            passwordToggles.forEach(toggle => {
                toggle.addEventListener('click', function() {
                    const input = this.parentElement.querySelector('input');
                    const type = input.type === 'password' ? 'text' : 'password';
                    input.type = type;

                    const icon = this.querySelector('i');
                    icon.className = type === 'password' ? 'fas fa-eye' : 'fas fa-eye-slash';
                });
            });

            // Form submission
            const form = document.querySelector('form');
            const submitBtn = document.querySelector('.signin-btn');

            if (form) {
                form.addEventListener('submit', function(e) {
                    // Add loading state
                    submitBtn.classList.add('loading');
                    const icon = submitBtn.querySelector('i');
                    const originalClass = icon.className;
                    icon.className = 'fas fa-spinner';
                });
            }

            // Enhanced input animations
            const inputs = document.querySelectorAll('.input-group input');
            inputs.forEach(input => {
                // Check if input has value on page load
                if (input.value.trim() !== '') {
                    input.classList.add('has-value');
                }

                input.addEventListener('blur', function() {
                    if (this.value.trim() !== '') {
                        this.classList.add('has-value');
                    } else {
                        this.classList.remove('has-value');
                    }
                });
            });

            // Video error handling
            const video = document.querySelector('video');
            if (video) {
                video.addEventListener('error', function() {
                    const videoWrapper = document.querySelector('.video-wrapper');
                    const fallback = document.querySelector('.video-fallback');

                    if (fallback) {
                        fallback.style.display = 'block';
                        this.style.display = 'none';
                    }
                });
            }

            // Auto-hide alerts after 5 seconds
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                setTimeout(() => {
                    alert.style.display = 'none';
                }, 5000);
            });
        });
    </script>
</body>
</html>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const dateInput = document.getElementById('birthDateInput');

        // Initialize label position based on existing value
        if(dateInput.value) {
            dateInput.nextElementSibling.classList.add('active');
        }

        // Handle focus/blur events
        dateInput.addEventListener('focus', function() {
            this.nextElementSibling.classList.add('active');
        });

        dateInput.addEventListener('blur', function() {
            if(!this.value) {
                this.nextElementSibling.classList.remove('active');
            }
        });
    });
</script>
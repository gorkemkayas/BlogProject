
@{
    Layout = "_SignInUp";
    ViewData["Title"] = "Signin";
}

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}

@model SignInViewModel

@if (TempData["Succeed"] != null)
{
    <div id="successAlert" class="custom-alert alert-success">
        <i class="fa-solid fa-check"></i>
        @TempData["Succeed"]!.ToString()
    </div>
}
else if (TempData["Failed"] != null)
{
    <div id="errorAlert" class="custom-alert alert-danger">
        <i class="fa-solid fa-xmark"></i>  @TempData["Failed"]!.ToString()
    </div>
}

@if (TempData["SuspensionMessage"] != null)
{
    <script>
        window.addEventListener("DOMContentLoaded", function () {
            const modal = new bootstrap.Modal(document.getElementById('suspendedModal'));
            modal.show();
        });
    </script>

    <!-- Horizontal Premium Suspension Modal -->
    <div class="modal fade" id="suspendedModal" tabindex="-1" aria-hidden="true" data-bs-backdrop="static">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content border-0 overflow-hidden" style="border-radius: 12px; max-height: 480px;">

                <div class="d-flex flex-row">
                    <!-- Gradient Sidebar -->
                    <div class="d-flex flex-column justify-content-between p-5 text-white"
                         style="width: 280px; background: linear-gradient(135deg, #4361ee 0%, #3a0ca3 100%);">
                        <div>
                            <div class="mb-4">
                                <i class="bi bi-shield-lock fs-1"></i>
                            </div>
                            <h3 class="fw-semibold mb-3">Account Restricted</h3>
                            <p class="small opacity-80">Security measures have been applied to your account</p>
                        </div>
                        <div class="mt-auto">
                            <button class="btn btn-outline-light btn-sm rounded-pill px-3">
                                <i class="bi bi-question-circle me-2"></i>Need Help?
                            </button>
                        </div>
                    </div>

                    <!-- Content Area -->
                    <div class="flex-grow-1 p-4" style="background: #f9fafc;">
                        <button type="button" class="btn-close float-end" data-bs-dismiss="modal" aria-label="Close"></button>

                        <div class="pt-3 pe-3" style="max-height: 400px; overflow-y: auto;">
                            <!-- Suspension Notice -->
                            @if (TempData["SuspensionMessage"] != null)
                            {
                                <div class="alert bg-white border-start border-3 border-primary px-4 py-3 mb-4 shadow-sm">
                                    <div class="d-flex align-items-center">
                                        <i class="bi bi-info-circle-fill text-primary me-3"></i>
                                        <div>
                                            <h6 class="fw-semibold mb-1">Security Notice</h6>
                                            <p class="small mb-0 text-muted">@TempData["SuspensionMessage"]</p>
                                        </div>
                                    </div>
                                </div>
                            }

                            <!-- Violation Details -->
                            <div class="row g-3">
                                @if (TempData["SuspensionCategory"] != null)
                                {
                                    <div class="col-md-6">
                                        <div class="bg-white p-3 rounded-2 shadow-sm h-100">
                                            <h6 class="fw-semibold text-uppercase small text-muted mb-3">
                                                <i class="bi bi-tag me-2"></i>Violation Type
                                            </h6>
                                            <p class=" small mb-3 ms-2">@TempData["SuspensionCategory"]</p>
                                        </div>
                                    </div>
                                }

                                @if (TempData["SuspensionDetail"] != null)
                                {
                                    <div class="col-md-6">
                                        <div class="bg-white p-3 rounded-2 shadow-sm h-100">
                                            <h6 class="fw-semibold text-uppercase small text-muted mb-3">
                                                <i class="bi bi-list-ul me-2"></i>Details
                                            </h6>
                                            <p class="small mb-0">@TempData["SuspensionDetail"]</p>
                                        </div>
                                    </div>
                                }
                            </div>

                            <!-- Action Buttons -->
                            <div class="mt-4 pt-3 border-top">
                                <button class="btn btn-link text-muted me-3" data-bs-dismiss="modal">
                                    Dismiss
                                </button>
                               @using Newtonsoft.Json
<button id="contactSupportBtn" class="btn btn-primary px-4 rounded-pill"
        style="background: linear-gradient(90deg, #4361ee 0%, #3a0ca3 100%);">
  <i class="bi bi-envelope me-2"></i>Contact Support
</button>

<script>
// Get the button element
const contactBtn = document.getElementById('contactSupportBtn');

contactBtn.addEventListener('click', function() {
  // Safely get user ID from server-side TempData with null check
  const userId = "@Html.Raw(TempData["SuspendedUserId"]?.ToString())" || "UNKNOWN-" + Math.floor(Math.random() * 10000);
  
  // Format current date in local format
  const currentDate = new Date().toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
  
  // Construct email body template
  const emailBody = `
User ID: ${userId}
Date: ${currentDate}

Please explain your appeal below:

• Reason for appealing this suspension
• Any supporting evidence
• Contact information for follow-up
  `;
  
  // Encode URI components to handle special characters
  const mailtoLink = `mailto:gorkemkayas@hotmail.com?subject=Account%20Suspension%20Appeal&body=${encodeURIComponent(emailBody)}`;
  
  // Open default email client
  window.location.href = mailtoLink;
});
</script>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <style>
        .modal-content {
            box-shadow: 0 10px 25px rgba(67, 97, 238, 0.15);
        }

        .alert {
            border-left-width: 4px !important;
        }
    </style>


}

<!-- Login 12 - Bootstrap Brain Component -->
<section class="py-3 py-md-5 py-xl-8" style="margin-top:10%">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="mb-5">
                    <h2 class="display-5 fw-bold text-center">Sign in</h2>
                    <p class="text-center m-0">Don't have an account? <a asp-controller="User" asp-action="SignUp" class="text-danger">Sign up</a></p>
                </div>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-12 col-lg-10 col-xl-8">
                <div class="row gy-5 justify-content-center">
                    <div class="col-12 col-lg-5">
                        <form asp-controller="User" asp-action="SignIn" asp-route-returnUrl="@Context.Request.Query["returnUrl"]" method="post">
                            @Html.AntiForgeryToken()
                            <div class="row gy-3 overflow-hidden">
                                <div class="col-12">
                                    <div class="form-floating mb-3">
                                        <input asp-for="Email" class="form-control border-0 border-bottom rounded-0" placeholder="name@example.com" required>
                                        <label asp-for="Email" class="form-label"></label>
                                        <span class="text-danger mt-2" asp-validation-for="Email"></span>
                                    </div>
                                </div>
                                <div class="col-12">
                                    <div class="form-floating mb-3">
                                        <input asp-for="Password" type="password" class="form-control border-0 border-bottom rounded-0" placeholder="Password" required>
                                        <label asp-for="Password" class="form-label"></label>
                                        <span class="text-danger mt-2" asp-validation-for="Password"></span>
                                    </div>
                                </div>
                                <div class="col-12">
                                    <div class="row justify-content-between">
                                        <div class="col-6">
                                            <div class="form-check">
                                                <input asp-for="RememberMe" class="form-check-input" type="checkbox" >
                                                <label asp-for="RememberMe" class="graytoblack form-check-label text-secondary">
                                                    Remember me
                                                </label>
                                            </div>
                                        </div>
                                        <div class="col-6">
                                            <div class="text-end">
                                                <a asp-controller="user" asp-action="forgetpassword" class="graytoblack text-decoration-none">Forgot password?</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12">
                                    <div class="d-grid">
                                        <button class="btn btn-lg btn-dark rounded-0 fs-6" type="submit">Log in</button>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="col-12 col-lg-2 d-flex align-items-center justify-content-center gap-3 flex-lg-column">
                        <div class="bg-dark h-100 d-none d-lg-block" style="width: 1px; --bs-bg-opacity: .1;"></div>
                        <div class="bg-dark w-100 d-lg-none" style="height: 1px; --bs-bg-opacity: .1;"></div>
                        <div>or</div>
                        <div class="bg-dark h-100 d-none d-lg-block" style="width: 1px; --bs-bg-opacity: .1;"></div>
                        <div class="bg-dark w-100 d-lg-none" style="height: 1px; --bs-bg-opacity: .1;"></div>
                    </div>
                    <div class="col-12 col-lg-5 d-flex align-items-center flex-column justify-content-center">
                        <div asp-validation-summary="ModelOnly" class="text-danger">
                        </div>
                        <div class="d-flex gap-3 flex-column w-100 ">
                            <a href="#!" class="btn bsb-btn-2xl btn-outline-dark rounded-0 d-flex align-items-center">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-google text-danger" viewBox="0 0 16 16">
                                    <path d="M15.545 6.558a9.42 9.42 0 0 1 .139 1.626c0 2.434-.87 4.492-2.384 5.885h.002C11.978 15.292 10.158 16 8 16A8 8 0 1 1 8 0a7.689 7.689 0 0 1 5.352 2.082l-2.284 2.284A4.347 4.347 0 0 0 8 3.166c-2.087 0-3.86 1.408-4.492 3.304a4.792 4.792 0 0 0 0 3.063h.003c.635 1.893 2.405 3.301 4.492 3.301 1.078 0 2.004-.276 2.722-.764h-.003a3.702 3.702 0 0 0 1.599-2.431H8v-3.08h7.545z" />
                                </svg>
                                <span class="ms-2 fs-6 flex-grow-1">Continue with Google</span>
                            </a>
                            <a href="#!" class="btn bsb-btn-2xl btn-outline-dark rounded-0 d-flex align-items-center">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-apple text-dark" viewBox="0 0 16 16">
                                    <path d="M11.182.008C11.148-.03 9.923.023 8.857 1.18c-1.066 1.156-.902 2.482-.878 2.516.024.034 1.52.087 2.475-1.258.955-1.345.762-2.391.728-2.43Zm3.314 11.733c-.048-.096-2.325-1.234-2.113-3.422.212-2.189 1.675-2.789 1.698-2.854.023-.065-.597-.79-1.254-1.157a3.692 3.692 0 0 0-1.563-.434c-.108-.003-.483-.095-1.254.116-.508.139-1.653.589-1.968.607-.316.018-1.256-.522-2.267-.665-.647-.125-1.333.131-1.824.328-.49.196-1.422.754-2.074 2.237-.652 1.482-.311 3.83-.067 4.56.244.729.625 1.924 1.273 2.796.576.984 1.34 1.667 1.659 1.899.319.232 1.219.386 1.843.067.502-.308 1.408-.485 1.766-.472.357.013 1.061.154 1.782.539.571.197 1.111.115 1.652-.105.541-.221 1.324-1.059 2.238-2.758.347-.79.505-1.217.473-1.282Z" />
                                    <path d="M11.182.008C11.148-.03 9.923.023 8.857 1.18c-1.066 1.156-.902 2.482-.878 2.516.024.034 1.52.087 2.475-1.258.955-1.345.762-2.391.728-2.43Zm3.314 11.733c-.048-.096-2.325-1.234-2.113-3.422.212-2.189 1.675-2.789 1.698-2.854.023-.065-.597-.79-1.254-1.157a3.692 3.692 0 0 0-1.563-.434c-.108-.003-.483-.095-1.254.116-.508.139-1.653.589-1.968.607-.316.018-1.256-.522-2.267-.665-.647-.125-1.333.131-1.824.328-.49.196-1.422.754-2.074 2.237-.652 1.482-.311 3.83-.067 4.56.244.729.625 1.924 1.273 2.796.576.984 1.34 1.667 1.659 1.899.319.232 1.219.386 1.843.067.502-.308 1.408-.485 1.766-.472.357.013 1.061.154 1.782.539.571.197 1.111.115 1.652-.105.541-.221 1.324-1.059 2.238-2.758.347-.79.505-1.217.473-1.282Z" />
                                </svg>
                                <span class="ms-2 fs-6 flex-grow-1">Continue with Apple</span>
                            </a>
                            <a href="#!" class="btn bsb-btn-2xl btn-outline-dark rounded-0 d-flex align-items-center">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-facebook text-primary" viewBox="0 0 16 16">
                                    <path d="M16 8.049c0-4.446-3.582-8.05-8-8.05C3.58 0-.002 3.603-.002 8.05c0 4.017 2.926 7.347 6.75 7.951v-5.625h-2.03V8.05H6.75V6.275c0-2.017 1.195-3.131 3.022-3.131.876 0 1.791.157 1.791.157v1.98h-1.009c-.993 0-1.303.621-1.303 1.258v1.51h2.218l-.354 2.326H9.25V16c3.824-.604 6.75-3.934 6.75-7.951z" />
                                </svg>
                                <span class="ms-2 fs-6 flex-grow-1">Continue with Facebook</span>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@if (TempData["EmailNotConfirmed"] is bool emailNotConfirmed && emailNotConfirmed)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            Swal.fire({
                title: "Email Confirmation Required",
                text: "You must verify your email address before using your account.",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Resend Email",
                cancelButtonText: "Cancel",
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    resendEmailConfirmation("@TempData["UserEmail"]");
                }
            });
        });

        function resendEmailConfirmation(email) {
            fetch('/User/ResendEmailConfirmation', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ email: email })
            })
            .then(response => {
                if (response.ok) {
                    Swal.fire(
                        'Successfull!',
                        'Email verification link has been sent.',
                        'success'
                    );
                } else {
                    Swal.fire(
                        'Error!',
                        'An error occurred. Please try again.',
                        'error'
                    );
                }
            });
        }
    </script>
}